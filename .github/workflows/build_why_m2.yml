name: Build WHY2025 Badge M.2 board FW
on:
  push:
    tags:
      - v*
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "doc/"
  workflow_dispatch:


jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: esp-idf build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.5
          target: esp32p4
          path: .
          command: 'apt update && apt install -y jq && idf.py build merge-bin -o meshtastic-fw-why-badge-m2-${{github.sha}}.bin'
      - name: Create ESP web flasher manifest JSON
        run: |
          cat > manifest.json <<EOF
          {
            "name": "Meshtastic for WHY2025 badge combo FW (ESP32-P4 M.2 module + C6 on carrier)",
            "version": "${{github.sha}}",
            "builds": [
              {
                "chipFamily": "ESP32-P4",
                "improv": false,
                "parts": [
                  {
                    "offset": 0,
                    "path": "meshtastic-fw-why-badge-m2-${{github.sha}}.bin"
                  }
                ]
              }
            ]
          }
          EOF
      - name: Store binaries as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: meshtastic-why2025-m2-firmware-${{github.sha}}
          overwrite: true
          path: |
            build/meshtastic-fw-why-badge-m2-${{github.sha}}.bin
            manifest.json
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            build/meshtastic-fw-why-badge-m2-${{github.sha}}.bin
            manifest.json
          fail_on_unmatched_files: true
      - name: copy GitHub Pages artifacts
        run: cp build/meshtastic-fw-why-badge-m2-${{github.sha}}.bin manifest.json web-flasher/
      - name: Upload GitHub Pages artifact
        if: github.ref_type == 'tag'
        id: pages_deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: web-flasher/

  deploy-page:
    permissions:
      id-token: write
      pages: write
    if: github.ref_type == 'tag'
    environment:
      name: github-pages
      url: ${{ steps.pages_deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: pages_deployment
        uses: actions/deploy-pages@v4
